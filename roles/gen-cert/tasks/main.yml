- name: init cert dir
  file: path={{ CERT_DIR }} owner=root group=root mode=0755 state=directory

- name: genrsa ca cert step 1
  command: chdir={{ CERT_DIR }} openssl genrsa -out ca-key.pem 2048

- name: genrsa ca cert step 2
  command: chdir={{ CERT_DIR }} openssl req -x509 -new -nodes -key ca-key.pem -days 10000 -out ca.pem -subj "/CN=kube-ca"

- name: copy openssl config
  template: src=openssl.cnf dest={{ CERT_DIR }}/openssl.cnf mode=644

- name: genrsa apiserver cert step 1
  command: chdir={{ CERT_DIR }} openssl genrsa -out apiserver-key.pem 2048

- name: genrsa apiserver cert step 2
  command: chdir={{ CERT_DIR }} openssl req -new -key apiserver-key.pem -out apiserver.csr -subj "/CN=kube-apiserver" -config openssl.cnf

- name: genrsa apiserver cert step 3
  command: chdir={{ CERT_DIR }} openssl x509 -req -in apiserver.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out apiserver.pem -days 3650 -extensions v3_req -extfile openssl.cnf

- name: copy node openssl config
  template: src=worker-openssl.cnf dest={{ CERT_DIR }}/worker-openssl.cnf mode=644

- name: genrsa node certs
  shell: chdir={{ CERT_DIR }} export WORKER_IP={{ item }};openssl genrsa -out {{ hostvars[item]['hostname'] }}-worker-key.pem 2048 && openssl req -new -key {{ hostvars[item]['hostname'] }}-worker-key.pem -out {{ hostvars[item]['hostname'] }}-worker.csr -subj "/CN={{ hostvars[item]['hostname'] }}" -config {{ CERT_DIR }}/worker-openssl.cnf && openssl x509 -req -in {{ hostvars[item]['hostname'] }}-worker.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out {{ hostvars[item]['hostname'] }}-worker.pem -days 3650 -extensions v3_req -extfile {{ CERT_DIR }}/worker-openssl.cnf
  with_items:
    - "{{ groups['k8s-node'] }}"